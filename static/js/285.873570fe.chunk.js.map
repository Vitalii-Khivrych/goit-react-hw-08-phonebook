{"version":3,"file":"static/js/285.873570fe.chunk.js","mappings":"+WAoBMA,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,GAAgB,OAAQ,IAAhD,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,GAAgB,SAAU,IAApD,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,cACxBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUb,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,MACtC,OAAQd,GACN,IAAK,OACH,OAAOC,EAAQa,GACjB,IAAK,QACH,OAAOX,EAASW,GAClB,IAAK,WACH,OAAOR,EAAYQ,GACrB,QACE,SAkBAC,EAAQ,WACZd,EAAQ,IACRE,EAAS,IACTG,EAAY,KAGd,OACE,SAAC,IAAD,CAAeV,MAAOA,EAAtB,UACE,UAAC,IAAD,CAAWoB,UAAU,OAAOC,SAAS,KAArC,WACE,SAAC,KAAD,KACA,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAYN,UAAU,KAAKO,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CACEP,UAAU,OACVQ,SArCW,SAAAC,GACnBA,EAAMC,iBAEmB1B,GAAQE,GAASG,GAO1CK,EAASiB,EAAAA,EAAAA,SAAwB,CAAE3B,KAAAA,EAAME,MAAAA,EAAOG,SAAAA,KAChDU,KALEa,EAAAA,GAAAA,QAAA,yBAAwCC,EAAAA,IAgClCC,YAAU,EACVZ,GAAI,CAAEa,GAAI,GAJZ,WAME,SAAC,IAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,YACNpC,KAAK,OACLqC,aAAa,OACbC,WAAS,EACTxB,MAAOd,EACPuC,SAAU3B,KAEZ,SAAC,IAAD,CACEoB,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNpC,KAAK,QACLqC,aAAa,QACbG,KAAK,QACL1B,MAAOZ,EACPqC,SAAU3B,KAEZ,SAAC,IAAD,CACEoB,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTlC,KAAK,WACLoC,MAAM,WACNI,KAAK,WACLL,GAAG,WACHE,aAAa,mBACbvB,MAAOT,EACPkC,SAAU3B,KAGZ,SAAC,IAAD,CACE4B,KAAK,SACLN,WAAS,EACTX,QAAQ,YACRkB,SAAUlC,EACVW,GAAI,CAAEa,GAAI,EAAGW,GAAI,GALnB","sources":["pages/Register.jsx"],"sourcesContent":["import {\n  Button,\n  CssBaseline,\n  TextField,\n  Box,\n  Container,\n  Typography,\n} from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport authOperations from 'redux/auth/auth-operations';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\nimport optionsNotify from 'helpers/toastConfig';\n\nconst theme = createTheme();\n\nexport default function Register() {\n  const [name, setName] = useLocalStorage('name', '');\n  const [email, setEmail] = useLocalStorage('number', '');\n  const [password, setPassword] = useState('');\n\n  const isLoading = useSelector(authSelectors.getIsLoading);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isEmptyFieldForm = name && email && password;\n\n    if (!isEmptyFieldForm) {\n      toast.warning(`There are empty fields`, optionsNotify);\n      return;\n    }\n\n    dispatch(authOperations.register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"User name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n              value={name}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={handleChange}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={isLoading}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"names":["theme","createTheme","Register","useLocalStorage","name","setName","email","setEmail","useState","password","setPassword","isLoading","useSelector","authSelectors","dispatch","useDispatch","handleChange","target","value","reset","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","variant","onSubmit","event","preventDefault","authOperations","toast","optionsNotify","noValidate","mt","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","disabled","mb"],"sourceRoot":""}