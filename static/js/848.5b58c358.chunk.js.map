{"version":3,"file":"static/js/848.5b58c358.chunk.js","mappings":"gXAoBMA,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,GAAgB,QAAS,IAAnD,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,cAExBC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOX,EAASY,GAClB,IAAK,WACH,OAAOT,EAAYS,GACrB,QACE,SAkBAC,EAAQ,WACZb,EAAS,IACTG,EAAY,KAGd,OACE,SAAC,IAAD,CAAeR,MAAOA,EAAtB,UACE,UAAC,IAAD,CAAWmB,UAAU,OAAOC,SAAS,KAArC,WACE,SAAC,KAAD,KACA,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAYN,UAAU,KAAKO,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CACEP,UAAU,OACVQ,SApCW,SAAAC,GACnBA,EAAMC,iBAEmBzB,GAASG,GAOlCE,EAASqB,EAAAA,EAAAA,MAAqB,CAAE1B,MAAAA,EAAOG,SAAAA,KACvCW,KALEa,EAAAA,GAAAA,QAAA,yBAAwCC,EAAAA,IA+BlCC,YAAU,EACVZ,GAAI,CAAEa,GAAI,GAJZ,WAME,SAAC,IAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNvB,KAAK,QACLwB,aAAa,QACbC,WAAS,EACTC,KAAK,QACLzB,MAAOb,EACPuC,SAAU7B,KAEZ,SAAC,IAAD,CACEqB,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTrB,KAAK,WACLuB,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHE,aAAa,mBACbvB,MAAOV,EACPoC,SAAU7B,KAGZ,SAAC,IAAD,CACE4B,KAAK,SACLL,WAAS,EACTX,QAAQ,YACRkB,SAAUjC,EACVU,GAAI,CAAEa,GAAI,EAAGW,GAAI,GALnB","sources":["pages/SignIn.jsx"],"sourcesContent":["import {\n  Button,\n  CssBaseline,\n  TextField,\n  Box,\n  Container,\n  Typography,\n} from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport authOperations from 'redux/auth/auth-operations';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\nimport optionsNotify from 'helpers/toastConfig';\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n  const [email, setEmail] = useLocalStorage('email', '');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(authSelectors.getIsLoading);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isEmptyFieldForm = email && password;\n\n    if (!isEmptyFieldForm) {\n      toast.warning(`There are empty fields`, optionsNotify);\n      return;\n    }\n\n    dispatch(authOperations.logIn({ email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              type=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={handleChange}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={isLoading}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"names":["theme","createTheme","SignIn","useLocalStorage","email","setEmail","useState","password","setPassword","dispatch","useDispatch","isLoading","useSelector","authSelectors","handleChange","target","name","value","reset","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","variant","onSubmit","event","preventDefault","authOperations","toast","optionsNotify","noValidate","mt","margin","required","fullWidth","id","label","autoComplete","autoFocus","type","onChange","disabled","mb"],"sourceRoot":""}